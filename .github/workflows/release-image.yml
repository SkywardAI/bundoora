name: 'Releasing Image 🚀'
on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  release_image:
    name: 'Releasing Image 🐳'
    strategy:
      matrix:
        config:
          - { tag: "conda", dockerfile: "Dockerfile.conda", platforms: "linux/amd64,linux/arm64" }
          - { tag: "uv", dockerfile: "Dockerfile.uv", platforms: "linux/amd64,linux/arm64" }
          - { tag: "latex", dockerfile: "Dockerfile.latex", platforms: "linux/arm64,linux/arm64" }

    runs-on: ubuntu-latest
    steps:
      - name: Check repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Tag Name
        id: tag
        shell: bash
        run: |
          if [[ "${{ matrix.config.tag }}" == "conda" ]]; then
            echo "SHORT_HASH=$(git rev-parse --short=7 HEAD)-conda" >> $GITHUB_ENV
          elif [[ "${{ matrix.config.tag }}" == "latex" ]]; then
            echo "SHORT_HASH=$(git rev-parse --short=7 HEAD)-latex" >> $GITHUB_ENV
          elif [[ "${{ matrix.config.tag }}" == "uv" ]]; then
            echo "SHORT_HASH=$(git rev-parse --short=7 HEAD)-uv" >> $GITHUB_ENV
          else
            echo "SHORT_HASH=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
          fi
        
      - name: Push Docker image
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: ${{ matrix.config.platforms }}
          tags: "ghcr.io/${{ secrets.NAMESPACE }}/${{ secrets.IMAGE_NAME }}:${{ env.TAG }}"
          file: ${{ matrix.config.dockerfile }}